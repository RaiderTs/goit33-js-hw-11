{"version":3,"sources":["js/promisification/promis-01.js"],"names":["delay","ms","Promise","resolve","reject","setTimeout","logger","time","console","log","then","refs","body","document","querySelector","getRandomHexColor","Math","floor","random","toString","style","cssText"],"mappings":";AAAA,MAAMA,EAAQC,GACH,IAAIC,QAAQ,CAACC,EAASC,KAEzBC,WAAW,KAEPF,EAAQF,IAITA,KAILK,EAASC,GAAQC,QAAQC,uBAAuBF,OAGtDP,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,KAAMU,KAAKJ,GACjBN,EAAM,MAAMU,KAAKJ,GAKjB,MAAMK,EAAO,CACXC,KAAMC,SAASC,cAAc,SAK/B,SAASC,IACC,UAAGC,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBC,SAAS,MAH3DR,EAAKC,KAAKQ,MAAMC,6BAA+BN","file":"promis-01.2073ea86.js","sourceRoot":"../src","sourcesContent":["const delay = ms => {\n    return new Promise((resolve, reject) => {\n        const success = true\n        setTimeout(() => {\n          if (success) {\n            resolve(ms);\n          } else {\n            reject(console.log('Error'));\n          }\n        }, ms);\n     })\n};\n\nconst logger = time => console.log(`Fulfilled after ${time}ms`);\n\n// Tests\ndelay(2000).then(logger); // Fulfilled after 2000ms\ndelay(1000).then(logger); // Fulfilled after 1000ms\ndelay(1500).then(logger); // Fulfilled after 1500ms\n\n\n\n// body\nconst refs = {\n  body: document.querySelector('body'),\n};\n\nrefs.body.style.cssText = `background-color: ${getRandomHexColor()}`;\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\n"]}