{"version":3,"sources":["js/promisification/promis-03.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","Promise","onSuccess","onError","delay","setTimeout","id","time","logSuccess","console","log","logError","warn","amount","then","catch","refs","body","document","querySelector","getRandomHexColor","toString","style","cssText"],"mappings":";AAAA,MAAMA,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAmBC,GACd,IAAIC,QAAQ,CAACC,EAAWC,KACrBC,MAAAA,EAAQX,EAA0B,IAAK,KAC7CY,WAAW,KACUT,KAAKE,SAAW,GAEjCI,EAAU,CAAEI,GAAIN,EAAYM,GAAIC,KAAMH,IAEtCD,EAAQH,EAAYM,KAErBF,KAKLI,EAAa,EAAGF,GAAAA,EAAIC,KAAAA,MACxBE,QAAQC,mBAAmBJ,kBAAmBC,QAG1CI,EAAWL,IACfG,QAAQG,qCAAqCN,+BAI/CP,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAClCd,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAGlCd,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAChEZ,EAAgB,CAAEO,GAAI,GAAIO,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAIhE,MAAMK,EAAO,CACXC,KAAMC,SAASC,cAAc,SAK/B,SAASC,IACC,UAAGxB,KAAKC,MAAsB,SAAhBD,KAAKE,UAAqBuB,SAAS,MAH3DL,EAAKC,KAAKK,MAAMC,6BAA+BH","file":"promis-03.1d4a0faf.js","sourceRoot":"../src","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n    return new Promise((onSuccess, onError) => {\n        const delay = randomIntegerFromInterval(200, 500);\n        setTimeout(() => {\n          const canProcess = Math.random() > 0.3;\n          if (canProcess) {\n            onSuccess({ id: transaction.id, time: delay });\n          } else {\n            onError(transaction.id);\n          }\n        }, delay);\n    });\n  \n};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n// Currently the function works like this\nmakeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\nmakeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n\n// The function should work like this\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\n\n// body\nconst refs = {\n  body: document.querySelector('body'),\n};\n\nrefs.body.style.cssText = `background-color: ${getRandomHexColor()}`;\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}"]}